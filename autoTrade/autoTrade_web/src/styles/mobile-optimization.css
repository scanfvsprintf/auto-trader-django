/**
 * 移动端优化样式
 * 解决键盘弹起时的界面闪烁和跳转问题
 */

/* 全局移动端视口稳定性 */
:root {
  --viewport-height: 100vh;
  --initial-viewport-height: 100vh;
  --is-mobile: 0;
  --is-portrait: 0;
  --locked-viewport: 0;
}

/* 视口锁定状态 */
body.viewport-locked {
  height: var(--viewport-height, 100vh) !important;
  max-height: var(--viewport-height, 100vh) !important;
  overflow: hidden !important;
  position: relative !important;
}

body.viewport-locked html {
  height: var(--viewport-height, 100vh) !important;
  max-height: var(--viewport-height, 100vh) !important;
  overflow: hidden !important;
}

/* 键盘弹起时的全局样式 - 更激进的方案 */
body.keyboard-open {
  position: fixed !important;
  width: 100% !important;
  height: 100% !important;
  top: 0 !important;
  left: 0 !important;
  overflow: hidden !important;
  /* 防止任何滚动 */
  touch-action: none !important;
  -webkit-overflow-scrolling: auto !important;
}

/* 键盘弹起时强制固定所有容器 */
body.keyboard-open .layout,
body.keyboard-open .layout-mobile-portrait,
body.keyboard-open .selection-root,
body.keyboard-open .ai-config-root,
body.keyboard-open .system-root {
  height: var(--viewport-height, 100vh) !important;
  max-height: var(--viewport-height, 100vh) !important;
  overflow: hidden !important;
  position: relative !important;
}

/* 移动端输入框优化 */
@media (max-width: 768px) {
  /* 防止iOS Safari自动缩放 */
  input[type="text"],
  input[type="password"],
  input[type="email"],
  input[type="number"],
  input[type="tel"],
  input[type="url"],
  textarea,
  select {
    font-size: 16px !important;
    -webkit-appearance: none !important;
    -webkit-tap-highlight-color: transparent !important;
    transform: translateZ(0) !important;
  }
  
  /* ElementUI输入框特殊处理 */
  .el-input__inner,
  .el-textarea__inner,
  .el-select .el-input__inner {
    font-size: 16px !important;
    -webkit-appearance: none !important;
    -webkit-tap-highlight-color: transparent !important;
    transform: translateZ(0) !important;
  }
  
  /* 输入框聚焦时的视口稳定 - 更激进的方案 */
  .el-input.is-active,
  .el-select.is-active,
  .el-date-editor.is-active {
    position: relative !important;
    z-index: 1000 !important;
    /* 强制固定位置，防止任何移动 */
    transform: translateZ(0) !important;
    will-change: auto !important;
  }
  
  /* 输入框聚焦时立即稳定视口 */
  .el-input__inner:focus,
  .el-textarea__inner:focus,
  .el-select .el-input__inner:focus {
    /* 立即触发视口稳定 */
    animation: none !important;
    transition: none !important;
  }
  
  /* 防止输入框聚焦时的任何动画 */
  .el-input.is-active .el-input__inner,
  .el-select.is-active .el-input__inner,
  .el-date-editor.is-active .el-range-input {
    animation: none !important;
    transition: none !important;
    transform: translateZ(0) !important;
  }
}

/* 移动端滚动优化 */
@media (max-width: 768px) {
  .scroll-area,
  .layout-content,
  .layout-mobile-content {
    -webkit-overflow-scrolling: touch !important;
    transform: translateZ(0) !important;
  }
}

/* 移动端布局稳定性 - 更激进的方案 */
@media (max-width: 768px) {
  .layout,
  .layout-mobile-portrait,
  .selection-root {
    height: var(--viewport-height, 100vh) !important;
    max-height: var(--viewport-height, 100vh) !important;
    overflow: hidden !important;
  }
  
  /* 完全阻止视口变化 */
  html, body {
    height: var(--viewport-height, 100vh) !important;
    max-height: var(--viewport-height, 100vh) !important;
    overflow: hidden !important;
    position: relative !important;
  }
  
  /* 强制所有滚动容器使用固定高度 */
  .layout-content,
  .layout-mobile-content,
  .selection-content,
  .scroll-area {
    height: calc(var(--viewport-height, 100vh) - 100px) !important;
    max-height: calc(var(--viewport-height, 100vh) - 100px) !important;
    overflow-y: auto !important;
    overflow-x: hidden !important;
  }
}

/* 移动端底部导航稳定性 */
@media (max-width: 768px) {
  .layout-bottom-nav {
    transform: translateZ(0) !important;
    position: fixed !important;
    z-index: 4000 !important;
  }
}

/* 移动端抽屉和弹窗优化 */
@media (max-width: 768px) {
  .el-drawer__wrapper,
  .el-dialog__wrapper {
    z-index: 6000 !important;
  }
  
  .el-drawer__body,
  .el-dialog__body {
    -webkit-overflow-scrolling: touch !important;
    transform: translateZ(0) !important;
  }
}
