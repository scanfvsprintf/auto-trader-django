# Generated by Django 5.2.4 on 2025-07-31 05:16

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FactorDefinitions',
            fields=[
                ('factor_code', models.CharField(help_text="因子唯一英文代码, 如 'MA20_SLOPE'", max_length=50, primary_key=True, serialize=False)),
                ('factor_name', models.CharField(help_text="因子中文名称, 如 '20日均线斜率'", max_length=100)),
                ('description', models.TextField(blank=True, help_text='详细描述因子的计算逻辑和业务含义', null=True)),
                ('direction', models.CharField(choices=[('positive', '正向, 值越大越好'), ('negative', '负向, 值越小越好')], help_text='因子方向性。枚举: positive(正向, 值越大越好), negative(负向, 值越小越好)', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='是否启用该因子')),
            ],
            options={
                'verbose_name': '因子定义',
                'verbose_name_plural': '因子定义',
                'db_table': 'tb_factor_definitions',
            },
        ),
        migrations.CreateModel(
            name='StockInfo',
            fields=[
                ('stock_code', models.CharField(help_text="股票代码, 格式如 'sh.600000'", max_length=10, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(help_text='股票名称', max_length=50)),
                ('listing_date', models.DateField(help_text='上市日期, 用于剔除次新股')),
                ('status', models.CharField(choices=[('listing', '上市'), ('delisted', '退市'), ('suspended', '停牌')], help_text='股票状态。枚举: listing(上市), delisted(退市), suspended(停牌)', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='记录创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='记录更新时间')),
            ],
            options={
                'verbose_name': '股票基础信息',
                'verbose_name_plural': '股票基础信息',
                'db_table': 'tb_stock_info',
            },
        ),
        migrations.CreateModel(
            name='StrategyParameters',
            fields=[
                ('param_name', models.CharField(help_text="参数唯一英文名, 如 'w_trend', 'k_h1'", max_length=50, primary_key=True, serialize=False)),
                ('param_value', models.DecimalField(decimal_places=10, help_text='参数的数值', max_digits=20)),
                ('group_name', models.CharField(blank=True, help_text="参数所属分组, 如 'WEIGHTS', 'STOP_LOSS'", max_length=50, null=True)),
                ('description', models.TextField(blank=True, help_text='参数的详细说明', null=True)),
            ],
            options={
                'verbose_name': '策略参数',
                'verbose_name_plural': '策略参数',
                'db_table': 'tb_strategy_parameters',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('log_id', models.BigAutoField(help_text='日志唯一ID', primary_key=True, serialize=False)),
                ('log_time', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='日志记录时间')),
                ('log_level', models.CharField(choices=[('INFO', 'INFO'), ('WARNING', 'WARNING'), ('ERROR', 'ERROR'), ('CRITICAL', 'CRITICAL')], help_text='日志级别。枚举: INFO, WARNING, ERROR, CRITICAL', max_length=10)),
                ('module_name', models.CharField(blank=True, help_text="产生日志的模块名, 如 '日终选股', '开盘决策'", max_length=50, null=True)),
                ('message', models.TextField(help_text="日志内容, 如 '无合适买点', '下单API请求失败'")),
            ],
            options={
                'verbose_name': '系统日志',
                'verbose_name_plural': '系统日志',
                'db_table': 'tb_system_log',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('position_id', models.BigAutoField(help_text='持仓唯一ID', primary_key=True, serialize=False)),
                ('entry_datetime', models.DateTimeField(help_text='建仓成交时间')),
                ('entry_price', models.DecimalField(decimal_places=2, help_text='实际成交均价 (AEP)', max_digits=10)),
                ('quantity', models.BigIntegerField(help_text='持仓数量 (股)')),
                ('current_stop_loss', models.DecimalField(decimal_places=2, help_text='当前止损价', max_digits=10)),
                ('current_take_profit', models.DecimalField(decimal_places=2, help_text='当前止盈价', max_digits=10)),
                ('status', models.CharField(choices=[('open', '持仓中'), ('closed', '已平仓')], default='open', help_text='持仓状态。枚举: open(持仓中), closed(已平仓)', max_length=20)),
                ('stock_code', models.ForeignKey(db_column='stock_code', help_text='股票代码', on_delete=django.db.models.deletion.PROTECT, to='common.stockinfo')),
            ],
            options={
                'verbose_name': '持仓信息',
                'verbose_name_plural': '持仓信息',
                'db_table': 'tb_positions',
            },
        ),
        migrations.CreateModel(
            name='TradeLog',
            fields=[
                ('trade_id', models.BigAutoField(help_text='交易唯一ID', primary_key=True, serialize=False)),
                ('trade_datetime', models.DateTimeField(help_text='交易成交时间')),
                ('trade_type', models.CharField(choices=[('buy', '买入'), ('sell', '卖出')], help_text='交易类型。枚举: buy(买入), sell(卖出)', max_length=10)),
                ('order_type', models.CharField(choices=[('limit', '限价'), ('market', '市价')], help_text='订单类型。枚举: limit(限价), market(市价)', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, help_text='成交均价', max_digits=10)),
                ('quantity', models.BigIntegerField(help_text='成交数量')),
                ('commission', models.DecimalField(decimal_places=2, help_text='佣金', max_digits=10)),
                ('stamp_duty', models.DecimalField(decimal_places=2, default=0, help_text='印花税 (仅卖出时有)', max_digits=10)),
                ('reason', models.CharField(blank=True, choices=[('entry', '策略入场'), ('take_profit', '止盈'), ('stop_loss', '止损'), ('manual', '人工干预')], help_text='交易原因。枚举: entry(策略入场), take_profit(止盈), stop_loss(止损), manual(人工干预)', max_length=50, null=True)),
                ('status', models.CharField(choices=[('filled', '已成交'), ('failed', '失败'), ('cancelled', '已撤销')], help_text='订单状态。枚举: filled(已成交), failed(失败), cancelled(已撤销)', max_length=20)),
                ('position', models.ForeignKey(help_text='关联的持仓ID (买入时生成, 卖出时引用)', on_delete=django.db.models.deletion.CASCADE, related_name='trade_logs', to='common.position')),
                ('stock_code', models.ForeignKey(db_column='stock_code', help_text='股票代码', on_delete=django.db.models.deletion.PROTECT, to='common.stockinfo')),
            ],
            options={
                'verbose_name': '交易记录',
                'verbose_name_plural': '交易记录',
                'db_table': 'tb_trade_log',
            },
        ),
        migrations.AddField(
            model_name='position',
            name='related_buy_trade',
            field=models.OneToOneField(help_text='关联的买入交易记录ID', on_delete=django.db.models.deletion.PROTECT, related_name='created_position', to='common.tradelog'),
        ),
        migrations.CreateModel(
            name='DailyTradingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_date', models.DateField(help_text='预案执行日期 (T日)')),
                ('rank', models.IntegerField(help_text='综合得分排名 (1-10)')),
                ('final_score', models.DecimalField(decimal_places=4, help_text='f(x)选股综合得分', max_digits=10)),
                ('miop', models.DecimalField(decimal_places=2, help_text='最低可接受开盘价 (Minimum Acceptable Open Price)', max_digits=10)),
                ('maop', models.DecimalField(decimal_places=2, help_text='最高可接受开盘价 (Maximum Acceptable Open Price)', max_digits=10)),
                ('status', models.CharField(choices=[('pending', '待执行'), ('executed', '已执行买入'), ('cancelled', '当日未满足条件作废')], default='pending', help_text='预案状态。枚举: pending(待执行), executed(已执行买入), cancelled(当日未满足条件作废)', max_length=20)),
                ('stock_code', models.ForeignKey(db_column='stock_code', help_text='候选股票代码', on_delete=django.db.models.deletion.CASCADE, to='common.stockinfo')),
            ],
            options={
                'verbose_name': '每日交易预案',
                'verbose_name_plural': '每日交易预案',
                'db_table': 'tb_daily_trading_plan',
                'unique_together': {('plan_date', 'stock_code')},
            },
        ),
        migrations.CreateModel(
            name='DailyQuotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_date', models.DateField(help_text='交易日期')),
                ('open', models.DecimalField(decimal_places=2, help_text='不复权开盘价', max_digits=10)),
                ('high', models.DecimalField(decimal_places=2, help_text='不复权最高价', max_digits=10)),
                ('low', models.DecimalField(decimal_places=2, help_text='不复权最低价', max_digits=10)),
                ('close', models.DecimalField(decimal_places=2, help_text='不复权收盘价', max_digits=10)),
                ('volume', models.BigIntegerField(help_text='成交量 (股)')),
                ('turnover', models.DecimalField(decimal_places=2, help_text='成交额 (元)', max_digits=20)),
                ('adjust_factor', models.DecimalField(decimal_places=10, help_text='截至当日的后复权因子', max_digits=20)),
                ('hfq_close', models.DecimalField(decimal_places=10, editable=False, help_text='后复权收盘价，公式: close * adjust_factor', max_digits=20)),
                ('stock_code', models.ForeignKey(db_column='stock_code', help_text='股票代码', on_delete=django.db.models.deletion.CASCADE, to='common.stockinfo')),
            ],
            options={
                'verbose_name': '日线行情',
                'verbose_name_plural': '日线行情',
                'db_table': 'tb_daily_quotes',
                'unique_together': {('stock_code', 'trade_date')},
            },
        ),
        migrations.CreateModel(
            name='DailyFactorValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_date', models.DateField(help_text='交易日期')),
                ('raw_value', models.DecimalField(decimal_places=10, help_text='因子计算出的原始值', max_digits=20)),
                ('norm_score', models.DecimalField(blank=True, decimal_places=4, help_text='经过norm()函数标准化后的分值 (-100到100)', max_digits=10, null=True)),
                ('factor_code', models.ForeignKey(db_column='factor_code', help_text='因子代码', on_delete=django.db.models.deletion.CASCADE, to='common.factordefinitions')),
                ('stock_code', models.ForeignKey(db_column='stock_code', help_text='股票代码', on_delete=django.db.models.deletion.CASCADE, to='common.stockinfo')),
            ],
            options={
                'verbose_name': '每日因子值',
                'verbose_name_plural': '每日因子值',
                'db_table': 'tb_daily_factor_values',
                'unique_together': {('stock_code', 'trade_date', 'factor_code')},
            },
        ),
    ]
